on: push

name: Build

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
            extension:
          - os: windows-latest
            name: windows
            extension: .exe
    name: ${{ matrix.name }} build
    runs-on: ${{ matrix.os }}
    steps:

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install dependencies
        if: ${{ (matrix.os == 'ubuntu-latest') }}
        run: sudo apt-get install libgtk-3-dev

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Get version
        id: version
        shell: bash
        run: |
          cargo install cargo-get
          cd ck3spell
          version=$(cargo get version --pretty)
          archive="ck3spell-${{ matrix.name }}-$version"
          echo "::set-output name=version::$version"
          echo "::set-output name=archive::$archive"

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Create output dir
        shell: bash
        run: |
          mkdir ${{ steps.version.outputs.archive }}
          cp -p README.md LICENSE screenshots/sample.png target/release/ck3spell${{ matrix.extension }} ${{ steps.version.outputs.archive }}

      - name: Upload Archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.version.outputs.archive }}.zip
          path: ${{ steps.version.outputs.archive }}/
